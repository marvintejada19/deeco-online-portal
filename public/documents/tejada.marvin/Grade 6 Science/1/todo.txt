[ ] create validation for duplicate file names
[ ] matching types - redirect with items and answers (errors)
[ ] edit and delete question
[ ] move question
[ ] only one wordbox or columns
------------------------------------------------------------------------------------------------------------
[ ] change relationship of files to many to one
	[ ] subject post
	[ ] subject requirement
[ ] change password encryption from bcrypt to md5
------------------------------------------------------------------------------------------------------------
[X] create middleware that prevents user from editing or accessing objects 
		that are "deleted" (is_deleted == 1) 
	[X] if not possible, then use brute force coding:
			if($article->is_deleted == '1')
				return redirect('/home');
[X] create destroy and delete functions for respective objects
	[X] test delete in articles controller
[X] in articles list, create dropdown at the far right side of the title 
		and put the view, edit, and delete commands in their rather than in the body
	[X] additional option: remove view function and add a link in the title
[X] limit size of files to 16mb
[X] do not show unpublished articles
[X] uploaded files should have record on database
[X] start working on downloading files
	[X] create validation for downloading files
[X] fix edit subject post; files uploaded not linked
[X] create default topic and subtopic
[X] add links to breadcrumbs
[X] finish working on topics show.blade
[X] change date of articles, posts to datetime
[X] change SubjectExaminationInstance with SoftDeletes
[X] subjectexaminations order by published_at
[X] add security for subject, subject posts, etc
[X] add download history
[X] if requirement or exam is ongoing, faculty cannot edit
[X] add published_at dates at articles and posts